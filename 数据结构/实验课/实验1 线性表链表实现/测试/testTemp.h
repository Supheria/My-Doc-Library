//
// Created by david on 2019/10/07.
//

#ifndef TREE_TESTTEMP_H
#define TREE_TESTTEMP_H

#include <iostream>
#include <windows.h>

void firstScreen() {
    system("cls");
    std::cout << "=================顺序表测试====================\n"
                 "====请输入要进行测试的物理实现类型（1-2）：====\n"
                 "=============1、数组实现 2、链表实现==========\n"
                 "=================输入0退出=====================\n";
}

void secondScreen(int optionLast) {
    system("cls");
    if (optionLast == 1) {
        std::cout << "=================数组的实现====================\n"
                     "====请输入要进行测试的数据集组序号（1-5）：====\n"
                     "=================输入0退出=====================\n";
    } else {
        std::cout << "=================链表的实现====================\n"
                     "====请输入要进行测试的数据集组序号（1-5）：====\n"
                     "=================输入0退出=====================\n";
    }
}

void thirdScerrn() {
    system("cls");
    std::cout << "=================顺序表测试====================\n"
                 "========请输入要进行操作的序号（1-6）：========\n"
                 "========1、在末尾追加 2、在指定节点后增加======\n"
                 "=========3、清空线性表 4、删除指定元素=========\n"
                 "================5、修改指定元素===============\n"
                 "=================输入0退出=====================\n";
}


#endif //TREE_TESTTEMP_H
